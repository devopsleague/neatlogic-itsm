<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.process.dao.mapper.ProcessTaskMapper">

	<select id="getProcessTaskBaseInfoById" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskVo">
		SELECT
		`id`,
		`title`,
		`process_uuid` AS processUuid,
		`config_hash` AS configHash,
		`status`,
		`config`,
		DATE_FORMAT(`start_time`,'%Y-%m-%d %H:%i:%s') AS startTime,
		DATE_FORMAT(`end_time`,'%Y-%m-%d %H:%i:%s') AS endTime,
		`owner`,
		`reporter`,
		DATE_FORMAT(`expire_time`,'%Y-%m-%d %H:%i:%s') AS expireTime,
		`error`
		FROM
		`processtask`
		WHERE
		id = #{value}
	</select>

	<select id="getProcessTaskStepConfigByHash" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT
		`config`
		FROM
		`processtask_step_config`
		WHERE `hash` = #{value}
	</select>

	<select id="getProcessTaskFormByProcessTaskId" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskFormVo">
		SELECT
		`processtask_id` as processTaskId,
		`form_uuid` as formUuid,
		`form_name` as formName,
		`form_content` as formContent
		FROM
		`processtask_form`
		WHERE
		`processtask_id` = #{value}
	</select>

	<select id="getProcessTaskStepFormAttributeDataByStepId" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskAttributeDataVo">
		SELECT
		a.`processtask_id` AS processTaskId,
		a.`processtask_step_id` AS processTaskStepId,
		a.`attribute_uuid` AS attributeUuid,
		c.`data`
		FROM
		`processtask_step_formattribute` a JOIN `attribute` b ON a.`attribute_uuid` = b.`uuid` AND b.`is_active` = 1
		JOIN `processtask_formattribute_data` c ON a.`attribute_uuid` = c.`attribute_uuid` AND a.`processtask_id` = c.`processtask_id`
		WHERE
		a.`processtask_step_id` = #{value}
	</select>

	<select id="getProcessTaskStepContentIdByProcessTaskStepId" parameterType="java.lang.Long" resultType="java.lang.Long">
		SELECT
		`content_id`
		FROM
		`processtask_step_content`
		WHERE
		processtask_step_id = #{value}
	</select>

	<select id="getProcessTaskStepUserByStepId" resultType="codedriver.module.process.dto.ProcessTaskStepUserVo">
		SELECT
		`processtask_id` as processTaskId,
		`processtask_step_id` as processTaskStepId,
		`user_id` as userId,
		`user_type` as userType,
		`user_name` as userName,
		`status` as status,
		`action`,
		DATE_FORMAT(`start_time`,'%Y-%m-%d %H:%i:%s') AS startTime,
		DATE_FORMAT(`end_time`,'%Y-%m-%d %H:%i:%s') AS endTime,
		DATE_FORMAT(`active_time`,'%Y-%m-%d %H:%i:%s') AS activeTime
		FROM
		`processtask_step_user`
		WHERE
		processtask_step_id = #{processTaskStepId}
		<if test="userType != null and userType != ''">
			and user_type = #{userType}
		</if>
	</select>

	<select id="searchProcessTaskStep" parameterType="codedriver.module.process.dto.ProcessTaskStepVo" resultType="codedriver.module.process.dto.ProcessTaskStepVo">
		SELECT
		`id`,
		`processtask_id` AS processTaskId,
		`name`,
		`process_step_uuid` AS processStepUuid,
		`status`,
		`result`,
		`type`,
		`handler`,
		`is_active` AS isActive,
		DATE_FORMAT(a.`start_time`,'%Y-%m-%d %H:%i:%s') AS startTime,
		DATE_FORMAT(a.`end_time`,'%Y-%m-%d %H:%i:%s') AS endTime,
		DATE_FORMAT(a.`expire_time`,'%Y-%m-%d %H:%i:%s') AS endTime,
		`error`
		FROM
		`processtask_step` a
		WHERE
		1=1
		<if test="processStepUuid != null and processStepUuid != ''">
			AND `process_step_uuid` = #{processStepUuid}
		</if>
		<if test="needPage == true">
			LIMIT #{startNum}, #{pageSize}
		</if>
	</select>

	<select id="getProcessAssignUserByToStepId" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskAssignUserVo">
		SELECT
		`processtask_id` AS processTaskId,
		`from_step_id` AS fromStepId,
		`to_step_id` AS toStepId,
		`user_id` AS userId,
		`assign_time` AS assignTime
		FROM
		`processtask_assignuser`
		WHERE
		to_step_id = #{value}
		ORDER BY assign_time
	</select>

	<select id="getProcessTaskStepTimeoutPolicyByProcessTaskStepId" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskStepTimeoutPolicyVo">
		SELECT
		`processtask_id` as processTaskId,
		`processtask_step_id` as processTaskStepId,
		`process_step_uuid` as processStepUuid,
		`policy`,
		`sort`,
		`time`,
		`config`
		FROM
		`processtask_step_timeout_policy`
		WHERE
		`processtask_step_id` = #{value}
		ORDER BY `sort`
	</select>

	<select id="getProcessTaskStepWorkerPolicyByProcessTaskStepId" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskStepWorkerPolicyVo">
		SELECT
		`processtask_id` as processTaskId,
		`processtask_step_id` as processTaskStepId,
		`process_step_uuid` as processStepUuid,
		`policy`,
		`sort`,
		`config`
		FROM
		`processtask_step_worker_policy`
		WHERE
		`processtask_step_id` = #{value}
		ORDER BY `sort`
	</select>

	<select id="checkProcessTaskStepUserIsExists" parameterType="codedriver.module.process.dto.ProcessTaskStepUserVo" resultType="int">
		SELECT
		COUNT(1)
		FROM
		`processtask_step_user`
		WHERE
		`processtask_step_id` = #{processTaskStepId}
		AND
		`user_id` = #{userId}
	</select>

	<select id="getProcessTaskStepWorkerByProcessTaskStepId" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskStepWorkerVo">
		SELECT
		`processtask_id` AS processTaskId,
		`processtask_step_id` AS processTaskStepId,
		`user_id` AS userId
		FROM
		`processtask_step_worker`
		WHERE
		processtask_step_id = #{value}
	</select>

	<select id="getFromProcessTaskStepByToId" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskStepVo">
		SELECT
		a.`id`,
		a.`process_step_uuid` AS processStepUuid,
		a.`processtask_id` AS processTaskId,
		a.`status`,
		DATE_FORMAT(a.`start_time`,'%Y-%m-%d %H:%i:%s') AS startTime,
		DATE_FORMAT(a.`end_time`,'%Y-%m-%d %H:%i:%s') AS endTime,
		a.`is_active` AS isActive,
		a.`type`,
		a.`handler`,
		a.`name`
		FROM
		processtask_step a
		JOIN
		processtask_step_rel b ON a.id = b.from_processtask_step_id
		WHERE
		to_processtask_step_id = #{value}
	</select>

	<select id="getProcessTaskStepByConvergeId" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskStepVo">
		SELECT
		b.`id`,
		b.`status`,
		b.`name`,
		b.`type`,
		b.`handler`,
		b.`is_active` AS isActive,
		a.`is_check` AS isCheck
		FROM
		`processtask_converge` a JOIN
		`processtask_step` b ON a.`processtask_step_id` = b.`id`
		WHERE
		a.`converge_id` = #{value}
	</select>

	<select id="getProcessTaskStepIdByConvergeId" parameterType="java.lang.Long" resultType="java.lang.Long">
		SELECT
		a.`processtask_step_id`
		FROM
		`processtask_converge` a
		WHERE
		a.`converge_id` = #{value}
	</select>

	<select id="getProcessTaskLockById" parameterType="java.lang.Long" resultType="java.lang.Long">
		SELECT id FROM processtask WHERE id = #{value} FOR UPDATE
	</select>

	<select id="getToProcessTaskStepByFromId" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskStepVo">
		SELECT
		a.`id`,
		a.`processtask_id` AS processTaskId,
		a.`name`,
		a.`process_step_uuid` AS processStepUuid,
		a.`status`,
		a.`result`,
		a.`type`,
		a.`handler`,
		a.`is_active`,
		DATE_FORMAT(a.`start_time`, '%Y-%m-%d %H:%i:%s') AS startTime,
		DATE_FORMAT(a.`end_time`,'%Y-%m-%d %H:%i:%s') AS endTime,
		a.`error`
		FROM
		`processtask_step` a JOIN `processtask_step_rel` b ON a.`id` = b.`to_processtask_step_id`
		WHERE
		b.`from_processtask_step_id` = #{value}
	</select>

	<select id="checkProcessTaskConvergeIsExists" parameterType="codedriver.module.process.dto.ProcessTaskConvergeVo" resultType="int">
		SELECT
		COUNT(1)
		FROM
		`processtask_converge`
		WHERE
		processtask_id =
		#{processTaskId}
		AND
		converge_id = #{convergeId}
		AND
		processtask_step_id = #{processTaskStepId}
	</select>

	<select id="getProcessTaskStepByProcessTaskIdAndType" resultType="codedriver.module.process.dto.ProcessTaskStepVo">
		SELECT
		`id`,
		`processtask_id` AS processTaskId,
		`name`,
		`process_step_uuid` AS processStepUuid,
		`status`,
		`result`,
		`type`,
		`handler`,
		`is_active` AS isActive,
		`start_time`,
		`end_time`,
		`error`
		FROM
		`processtask_step`
		WHERE `processtask_id` = #{processTaskId}
		AND
		`type` = #{type}
	</select>

	<select id="getProcessTaskStepRelByToId" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskStepRelVo">
		SELECT
		`processtask_id` AS processTaskId,
		`from_process_step_uuid` AS fromProcessStepUuid,
		`to_process_step_uuid` AS toProcessStepUuid,
		`from_processtask_step_id` AS fromProcessTaskStepId,
		`to_processtask_step_id` AS toProcessTaskStepId,
		(SELECT xx.`handler` FROM `processtask_step` xx WHERE xx.id = `to_processtask_step_id`) AS toProcessStepHandler,
		`condition`,
		`is_hit` AS isHit
		FROM
		`processtask_step_rel`
		WHERE to_processtask_step_id = #{value}
	</select>

	<select id="getProcessTaskStepRelByFromId" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskStepRelVo">
		SELECT
		`processtask_id` AS processTaskId,
		`from_process_step_uuid` AS fromProcessStepUuid,
		`to_process_step_uuid` AS toProcessStepUuid,
		`from_processtask_step_id` AS fromProcessTaskStepId,
		`to_processtask_step_id` AS toProcessTaskStepId,
		(SELECT xx.`handler` FROM `processtask_step` xx WHERE xx.id = `to_processtask_step_id`) AS toProcessStepHandler,
		`condition`,
		`is_hit` AS isHit
		FROM
		`processtask_step_rel`
		WHERE from_processtask_step_id = #{value}
	</select>

	<select id="getProcessTaskStepBaseInfoById" parameterType="java.lang.Long" resultType="codedriver.module.process.dto.ProcessTaskStepVo">
		SELECT
		`id`,
		`processtask_id` AS processTaskId,
		`name`,
		`process_step_uuid` AS processStepUuid,
		`status`,
		`result`,
		`type`,
		`handler`,
		`is_active` AS isActive,
		`config_hash` AS configHash,
		`start_time`,
		`end_time`,
		`error`
		FROM
		`processtask_step`
		WHERE id = #{value}
	</select>

	<resultMap id="processTaskStepFormAttributeResultMap" type="codedriver.module.process.dto.ProcessTaskStepFormAttributeVo">
		<id column="processTaskStepId" property="processTaskStepId" />
		<id column="attributeUuid" property="attributeUuid" />
		<id column="processTaskId" property="processTaskId" />
		<result column="isEditable" property="isEditable" />
		<result column="label" property="label" />
		<result column="handler" property="handler" />
		<result column="config" property="config" />
		<result column="data" property="data" />
	</resultMap>

	<select id="getProcessTaskStepFormAttributeByStepId" parameterType="codedriver.module.process.dto.ProcessTaskStepFormAttributeVo" resultMap="processTaskStepFormAttributeResultMap">
		SELECT
		a.`processtask_step_id` AS processTaskStepId,
		a.`attribute_uuid` AS attributeUuid,
		a.`processtask_id` AS processTaskId,
		a.`is_editable` AS isEditable,
		a.`config`,
		f.`label`,
		f.`handler`,
		e.`data`,
		e.`attribute_uuid` AS dataAttributeUuid,
		e.`processtask_id` AS dataProcessTaskId
		FROM
		`processtask_step_formattribute` a
		LEFT JOIN `processtask_formattribute_data` e ON a.`processtask_id` = e.`processtask_id` AND a.`attribute_uuid` = e.`attribute_uuid`
		JOIN `form_attribute` f ON a.`attribute_uuid` = f.`uuid`
		WHERE
		a.`processtask_step_id` = #{processTaskStepId}
		<if test="attributeUuid != null and attributeUuid != ''">
			AND
			a.attribute_uuid = #{attributeUuid}
		</if>
	</select>

	<update id="updateProcessTaskStepConvergeIsCheck">
		UPDATE `processtask_converge` SET is_check = #{isCheck} WHERE converge_id = #{convergeId}
		AND processtask_step_id = #{processTaskStepId}
	</update>

	<update id="updateProcessTaskStepRelIsHit">
		UPDATE
		`processtask_step_rel`
		SET
		`is_hit` = #{isHit}
		WHERE `from_processtask_step_id` = #{fromProcessTaskStepId}
		<if test="toProcessTaskStepId != null">
			AND `to_processtask_step_id` = #{toProcessTaskStepId}
		</if>
	</update>

	<update id="updateProcessTaskStepStatus" parameterType="codedriver.module.process.dto.ProcessTaskStepVo">
		UPDATE
		`processtask_step`
		SET
		`status` = #{status},
		`result` = #{result},
		`is_active` = #{isActive},
		<if test="isActive == 1">
			`start_time` = NOW(3),
		</if>
		<if test="isActive == 2">
			`end_time` = NOW(3),
		</if>
		`error` = #{error}
		WHERE `id` = #{id}
	</update>

	<update id="updateProcessTaskStepExpireTime" parameterType="codedriver.module.process.dto.ProcessTaskStepVo">
		UPDATE
		`processtask_step`
		SET
		`expire_time` = #{expireTime}
		WHERE `id` = #{id}
	</update>

	<insert id="insertProcessTaskForm" parameterType="codedriver.module.process.dto.ProcessTaskFormVo">
		INSERT INTO `processtask_form` (
		`processtask_id`,
		`form_uuid`,
		`form_name`,
		`form_content`
		)
		VALUES
		(
		#{processTaskId},
		#{formUuid},
		#{formName},
		#{formContent}
		)
	</insert>

	<insert id="insertProcessTaskStepTimeoutPolicy" parameterType="codedriver.module.process.dto.ProcessTaskStepTimeoutPolicyVo">
		INSERT INTO `processtask_step_timeout_policy` (
		`processtask_id`,
		`processtask_step_id`,
		`process_step_uuid`,
		`policy`,
		`sort`,
		`time`,
		`config`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{processStepUuid},
		#{policy},
		#{sort},
		#{time},
		#{config}
		)
	</insert>

	<insert id="insertProcessTaskStepWorkerPolicy" parameterType="codedriver.module.process.dto.ProcessTaskStepWorkerPolicyVo">
		INSERT INTO `processtask_step_worker_policy` (
		`processtask_id`,
		`processtask_step_id`,
		`process_step_uuid`,
		`policy`,
		`sort`,
		`config`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{processStepUuid},
		#{policy},
		#{sort},
		#{config}
		)
	</insert>

	<insert id="replaceProcessTaskFormAttributeData" parameterType="codedriver.module.process.dto.ProcessTaskAttributeDataVo">
		REPLACE INTO `processtask_formattribute_data` (
		`processtask_id`,
		`attribute_uuid`,
		`data`
		)
		VALUES
		(
		#{processTaskId},
		#{attributeUuid},
		#{data}
		)
	</insert>

	<insert id="insertProcessTaskConverge" parameterType="codedriver.module.process.dto.ProcessTaskConvergeVo">
		INSERT INTO `processtask_converge` (
		`converge_id`,
		`processtask_step_id`,
		`processtask_id`
		)
		VALUES
		(
		#{convergeId},
		#{processTaskStepId},
		#{processTaskId}
		)
	</insert>

	<insert id="insertProcessTaskStepWorker" parameterType="codedriver.module.process.dto.ProcessTaskStepWorkerVo">
		INSERT INTO `processtask_step_worker` (
		`processtask_id`,
		`processtask_step_id`,
		`user_id`,
		`team_uuid`,
		`role_name`,
		`action`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{userId},
		#{teamUuid},
		#{roleName},
		#{action}
		)
	</insert>

	<insert id="insertProcessTaskStepRel" parameterType="codedriver.module.process.dto.ProcessTaskStepRelVo">
		INSERT INTO `processtask_step_rel` (
		`processtask_id`,
		`from_process_step_uuid`,
		`to_process_step_uuid`,
		`from_processtask_step_id`,
		`to_processtask_step_id`,
		`condition`,
		`is_hit`,
		`uuid`
		)
		VALUES
		(
		#{processTaskId},
		#{fromProcessStepUuid},
		#{toProcessStepUuid},
		#{fromProcessTaskStepId},
		#{toProcessTaskStepId},
		#{condition},
		#{isHit},
		#{processStepRelUuid}
		)
	</insert>

	<insert id="insertProcessTaskStepTeam" parameterType="codedriver.module.process.dto.ProcessTaskStepTeamVo">
		INSERT INTO `processtask_step_team` (
		`processtask_step_id`,
		`team_id`,
		`team_name`
		)
		VALUES
		(
		#{processTaskStepId},
		#{teamId},
		#{teamName}
		)
	</insert>

	<insert id="insertProcessTaskStep" parameterType="codedriver.module.process.dto.ProcessTaskStepVo">
		<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO `processtask_step` (
		`processtask_id`,
		`name`,
		`process_step_uuid`,
		`status`,
		`type`,
		`handler`,
		`is_active`,
		`config_hash`
		)
		VALUES
		(
		#{processTaskId},
		#{name,typeHandler=XssHandler},
		#{processStepUuid},
		#{status},
		#{type},
		#{handler},
		#{isActive},
		#{configHash}
		)
	</insert>

	<insert id="insertProcessTask" parameterType="codedriver.module.process.dto.ProcessTaskVo">
		<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO `processtask` (
		`title`,
		`process_uuid`,
		`config_hash`,
		`status`,
		`config`,
		`start_time`,
		`owner`,
		`reporter`,
		`expire_time`
		)
		VALUES
		(
		#{title,typeHandler=XssHandler},
		#{processUuid},
		#{configHash},
		#{status},
		#{config},
		NOW(3),
		#{owner},
		#{reporter},
		#{expireTime}
		)
	</insert>

	<insert id="insertProcessTaskChannel" parameterType="codedriver.module.process.dto.ProcessTaskVo">
		INSERT INTO `processtask_channel` (
		`processtask_id`,
		`channel_uuid`
		)
		VALUES
		(
		#{id},
		#{channelUuid}
		)
	</insert>

	<insert id="insertProcessTaskContent" parameterType="codedriver.module.process.dto.ProcessTaskContentVo">
		<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO `processtask_content` (`content`, fcd, fcu)
		VALUES
		(#{content,typeHandler=XssHandler}, NOW(3), #{editor})
	</insert>

	<insert id="insertProcessTaskStepContent">
		INSERT INTO `processtask_step_content` (
		`processtask_step_id`,
		`content_id`
		)
		VALUES
		(
		#{processTaskStepId},
		#{contentId}
		)
	</insert>

	<insert id="insertProcessTaskStepAuditFormAttributeData" parameterType="codedriver.module.process.dto.ProcessTaskStepAuditFormAttributeDataVo">
		INSERT INTO `processtask_step_audit_formattribute_data` (
		`audit_id`,
		`form_uuid`,
		`processtask_step_id`,
		`attribute_uuid`,
		`data`
		)
		VALUES
		(
		#{auditId},
		#{formUuid},
		#{processTaskStepId},
		#{attributeUuid},
		#{data}
		)
	</insert>

	<insert id="insertProcessTaskStepUser" parameterType="codedriver.module.process.dto.ProcessTaskStepUserVo">
		INSERT INTO `processtask_step_user` (
		`processtask_id`,
		`processtask_step_id`,
		`user_id`,
		`user_type`,
		`user_name`,
		`status`,
		`active_time`,
		`start_time`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{userId},
		#{userType},
		#{userName},
		#{status},
		NOW(3),
		NOW(3)
		)
	</insert>

	<insert id="replaceProcessTaskStepConfig" parameterType="codedriver.module.process.dto.ProcessTaskStepConfigVo">
		REPLACE INTO `processtask_step_config` (`hash`, `config`)
		VALUES
		(#{hash}, #{config})
	</insert>

	<insert id="insertProcessTaskStepFormAttribute" parameterType="codedriver.module.process.dto.ProcessTaskStepFormAttributeVo">
		INSERT INTO `processtask_step_formattribute` (
		`processtask_id`,
		`processtask_step_id`,
		`attribute_uuid`,
		`is_editable`,
		`config`
		)
		VALUES
		(
		#{processTaskId},
		#{processTaskStepId},
		#{attributeUuid},
		#{isEditable},
		#{config}
		)
	</insert>

	<insert id="replaceProcessTaskConfig" parameterType="codedriver.module.process.dto.ProcessTaskConfigVo">
		REPLACE INTO `processtask_config` (`hash`, `config`)
		VALUES
		(#{hash}, #{config})
	</insert>

	<update id="updateProcessTaskStepUserStatus" parameterType="codedriver.module.process.dto.ProcessTaskStepUserVo">
		UPDATE
		`processtask_step_user`
		SET
		`status` = #{status}
		<choose>
			<when test="status == 'doing'">
				,`start_time` = NOW(3),
				`end_time` = null
			</when>
			<when test="status == 'done'">
				,`end_time` = NOW(3)
			</when>
		</choose>
		WHERE
		`processtask_step_id` = #{processTaskStepId}
		AND `user_id` = #{userId}
	</update>

	<update id="updateProcessTaskStatus" parameterType="codedriver.module.process.dto.ProcessTaskVo">
		UPDATE
		`processtask`
		SET
		`status` = #{status},
		<choose>
			<when test="status == 'succeed' or status == 'failed' or status == 'aborted'">
				`end_time` = NOW(3)
			</when>
		</choose>
		WHERE
		`id` = #{id}
	</update>

	<delete id="deleteProcessTaskConvergeByStepId" parameterType="java.lang.Long">
		DELETE
		FROM
		`processtask_converge`
		WHERE
		`processtask_step_id` = #{value}
	</delete>

	<delete id="deleteProcessTaskFormAttributeValueByProcessTaskIdAndAttributeUuid">
		DELETE
		FROM
		`processtask_formattribute_value`
		WHERE `processtask_id` = #{processTaskId}
		AND `attribute_uuid` = #{attributeUuid}
	</delete>

	<delete id="deleteProcessTaskStepWorker">
		DELETE
		FROM
		`processtask_step_worker`
		WHERE `processtask_step_id` = #{processTaskStepId}
		<if test="userId != null and userId != ''">
			AND `user_id` = #{userId}
		</if>
	</delete>

	<delete id="deleteProcessTaskStepUser">
		DELETE
		FROM
		`processtask_step_user`
		WHERE `processtask_step_id` = #{processTaskStepId}
		<if test="userType != null and userType != ''">
			AND `user_type` = #{userType}
		</if>
	</delete>
</mapper>