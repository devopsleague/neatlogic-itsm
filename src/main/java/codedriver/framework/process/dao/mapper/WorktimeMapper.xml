<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.process.dao.mapper.WorktimeMapper">

	<resultMap id="worktimeMap" type="codedriver.module.process.dto.WorktimeVo">
		<id column="uuid" property="uuid"/>
		<result column="name" property="name"/>
		<result column="is_active" property="isActive"/>
		<result column="lcu" property="lcu"/>
		<result column="lcd" property="lcd"/>
		<result column="config" property="config"/>
	</resultMap>

	<select id="getWorktimeByUuid" resultMap="worktimeMap">
	SELECT 
	  wt.`uuid`,
	  wt.`name`,
	  wt.`is_active`,
	  wt.`lcu`,
	  wt.`lcd`,
	  wt.`config`
	FROM `worktime` wt
	WHERE wt.`uuid` = #{uuid}
	</select>

	<select id="checkWorktimeNameIsRepeat" resultType="int">
	SELECT COUNT(1) FROM `worktime` WHERE `name` = #{name} AND `uuid` != #{uuid}
	</select>
	
	<select id="checkWorktimeIsExists" resultType="int">
	SELECT COUNT(`uuid`) FROM `worktime` WHERE `uuid` = #{uuid}
	</select>

	<select id="searchWorktimeCount" resultType="int">
	SELECT 
	  COUNT(`uuid`)
	FROM `worktime` wt
	WHERE 1 = 1
	<if test="keyword != null">
	AND wt.`name` LIKE CONCAT('%', #{keyword}, '%')
	</if>
	<if test="isActive != null">
	AND wt.`is_active` = #{isActive}
	</if>
	</select>
	
	<select id="searchWorktimeList" resultMap="worktimeMap">
	SELECT 
	  wt.`uuid`,
	  wt.`name`,
	  wt.`is_active`,
	  wt.`lcu`,
	  wt.`lcd`
	FROM `worktime` wt
	WHERE 1 = 1
	<if test="keyword != null">
	AND wt.`name` LIKE CONCAT('%', #{keyword}, '%')
	</if>
	<if test="isActive != null">
	AND wt.`is_active` = #{isActive}
	</if>
	ORDER BY wt.`lcd`
	<if test="needPage">
	limit #{startNum}, #{pageSize}
	</if>
	</select>

	<resultMap type="codedriver.module.process.dto.WorktimeRangeVo" id="worktimeRangeMap">
		<result column="year" property="year"/>
		<result column="date" property="date"/>
		<result column="worktime_uuid" property="worktimeUuid"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
	</resultMap>
	<select id="getWorktimeRangeListByWorktimeUuid" resultMap="worktimeRangeMap">
	SELECT 
	  `year`,
	  `date`,
	  `worktime_uuid`,
	  `start_time`,
	  `end_time`
	FROM
	  `worktime_range` 
	WHERE `worktime_uuid` = #{worktimeUuid}
	ORDER BY `start_time`
	</select>
	
	<select id="getWorktimeDateList" resultType="java.lang.String">
	SELECT 
	  DISTINCT `date`
	FROM
	  `worktime_range` 
	WHERE `worktime_uuid` = #{worktimeUuid} 
	AND `year` = #{year}
	ORDER BY `date`
	</select>

	<select id="getRecentWorktimeRange" resultMap="worktimeRangeMap">
	SELECT 
	  `year`,
	  `date`,
	  `worktime_uuid`,
	  `start_time`,
	  `end_time`
	FROM
	  `worktime_range` 
	WHERE `worktime_uuid` = #{worktimeUuid} 
	AND `end_time` > #{startTime}
	ORDER BY `start_time`
	limit 0,1
	</select>
	
	<select id="calculateCostTime" resultType="long">
	SELECT 
	  SUM(IF(wtd.`end_time` > #{endTime}, #{endTime}, wtd.`end_time`) - IF(wtd.`start_time` &lt; #{startTime}, #{startTime}, wtd.`start_time`))
	FROM `worktime_range` wtd
	WHERE wtd.`worktime_uuid` = #{worktimeUuid}
	AND wtd.`end_time` >= #{startTime} 
	AND wtd.`start_time` &lt;= #{endTime}
	</select>
	
	<insert id="insertWorktime">
	INSERT INTO `worktime` ( `uuid`, `name`, `is_active`, `lcu`, `lcd`, `config` ) 
	VALUES ( #{uuid}, #{name}, #{isActive}, #{lcu}, now(), #{config})
	</insert>

	<insert id="insertBatchWorktimeRange">
	INSERT INTO `worktime_range` ( `year`, `date`, `worktime_uuid`, `start_time`, `end_time` ) 
	VALUES
	<foreach collection="list" item="item" separator=",">
	(#{item.year}, #{item.date}, #{item.worktimeUuid}, #{item.startTime}, #{item.endTime})
	</foreach>
	</insert>

	<update id="updateWorktime">
	UPDATE 
	`worktime` 
	SET
	  `uuid` = #{uuid},
	  `name` = #{name},
	  `is_active` = #{isActive},
	  `lcu` = #{lcu},
	  `lcd` = now() 
	WHERE `uuid` = #{uuid}
	</update>

	<delete id="deleteWorktimeByUuid">
	DELETE FROM `worktime` WHERE `uuid`=#{uuid}
	</delete>

	<delete id="deleteWorktimeRange">
	delete from `worktime_range` 
	where `worktime_uuid` = #{worktimeUuid}
	<if test="year != null">
	AND `year` = #{year}
	</if>
	</delete>
</mapper>